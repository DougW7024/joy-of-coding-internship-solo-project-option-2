"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");
var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault").default;
_Object$defineProperty(exports, "__esModule", {
  value: true
});
exports.useRoutePath = useRoutePath;
exports.useRoutePaths = useRoutePaths;
var _reduce = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/instance/reduce"));
var _values = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/object/values"));
var _routerContext = require("./router-context");
var _useRouteName = require("./useRouteName");
// This has to be a function, otherwise we're not able to do declaration merging
function useRoutePaths() {
  var _context;
  const routerState = (0, _routerContext.useRouterState)();
  const routePaths = (0, _reduce.default)(_context = (0, _values.default)(routerState.routes.pathRouteMap)).call(_context, (routePathsAcc, currRoute) => {
    if (currRoute.name) {
      routePathsAcc[currRoute.name] = currRoute.path;
    }
    return routePathsAcc;
  }, {});
  return routePaths;
}
function useRoutePath(routeName) {
  const currentRouteName = (0, _useRouteName.useRouteName)();
  const routePaths = useRoutePaths();
  const name = routeName || currentRouteName;
  if (!name) {
    return undefined;
  }
  return routePaths[name];
}