"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");
var _interopRequireWildcard = require("@babel/runtime-corejs3/helpers/interopRequireWildcard").default;
_Object$defineProperty(exports, "__esModule", {
  value: true
});
exports.Form = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactHookForm = require("react-hook-form");
var _ServerErrorsContext = require("./ServerErrorsContext");
var _jsxRuntime = require("react/jsx-runtime");
/**
 * Renders a `<form>` with the required context.
 */
function FormInner(_ref, ref) {
  let {
    config,
    error: errorProps,
    formMethods: propFormMethods,
    onSubmit,
    children,
    ...rest
  } = _ref;
  const hookFormMethods = (0, _reactHookForm.useForm)(config);
  const formMethods = propFormMethods || hookFormMethods;
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("form", {
    ref: ref,
    ...rest,
    onSubmit: formMethods.handleSubmit((data, event) => onSubmit?.(data, event)),
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ServerErrorsContext.ServerErrorsContext.Provider, {
      value: errorProps?.graphQLErrors?.[0]?.extensions?.properties?.messages || {},
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactHookForm.FormProvider, {
        ...formMethods,
        children: children
      })
    })
  });
}

// Sorry about the `as` type assertion (type cast) here. Normally I'd redeclare
// forwardRef to only return a plain function, allowing us to use TypeScript's
// Higher-order Function Type Inference. But that gives us problems with the
// ForwardRefExoticComponent type we use for our InputComponents. So instead
// of changing that type (because it's correct) I use a type assertion here.
// forwardRef is notoriously difficult to use with UI component libs.
// Chakra-UI also says:
// > To be honest, the forwardRef type is quite complex [...] I'd recommend
// > that you cast the type
// https://github.com/chakra-ui/chakra-ui/issues/4528#issuecomment-902566185
const Form = exports.Form = /*#__PURE__*/(0, _react.forwardRef)(FormInner);