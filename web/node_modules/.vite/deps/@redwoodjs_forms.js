import {
  require_index_of
} from "./chunk-3BPOMT6A.js";
import {
  require_for_each,
  require_keys
} from "./chunk-7SMCR6UX.js";
import {
  require_interopRequireWildcard
} from "./chunk-VFI5UTAZ.js";
import {
  require_map
} from "./chunk-AZP2HYDB.js";
import "./chunk-76PFQ7MX.js";
import {
  require_jsx_runtime
} from "./chunk-KWOHGQDJ.js";
import "./chunk-VYX2O666.js";
import {
  require_interopRequireDefault
} from "./chunk-NRWAR2OR.js";
import {
  require_define_property2 as require_define_property
} from "./chunk-X6KK2XJU.js";
import {
  require_react
} from "./chunk-TG2HHWBU.js";
import {
  __commonJS
} from "./chunk-2GTGKKMZ.js";

// ../node_modules/react-hook-form/dist/index.cjs.js
var require_index_cjs = __commonJS({
  "../node_modules/react-hook-form/dist/index.cjs.js"(exports) {
    "use strict";
    function e(e2) {
      return e2 && "object" == typeof e2 && "default" in e2 ? e2 : { default: e2 };
    }
    Object.defineProperty(exports, "__esModule", { value: true });
    var t = e(require_react());
    var r = (e2) => "checkbox" === e2.type;
    var s = (e2) => e2 instanceof Date;
    var a = (e2) => null == e2;
    var n = (e2) => "object" == typeof e2;
    var i = (e2) => !a(e2) && !Array.isArray(e2) && n(e2) && !s(e2);
    var u = (e2) => i(e2) && e2.target ? r(e2.target) ? e2.target.checked : e2.target.value : e2;
    var o = (e2, t2) => e2.has(((e3) => e3.substring(0, e3.search(/\.\d+(\.|$)/)) || e3)(t2));
    var l = (e2) => {
      const t2 = e2.constructor && e2.constructor.prototype;
      return i(t2) && t2.hasOwnProperty("isPrototypeOf");
    };
    var d = "undefined" != typeof window && void 0 !== window.HTMLElement && "undefined" != typeof document;
    function c(e2) {
      let t2;
      const r2 = Array.isArray(e2);
      if (e2 instanceof Date)
        t2 = new Date(e2);
      else if (e2 instanceof Set)
        t2 = new Set(e2);
      else {
        if (d && (e2 instanceof Blob || e2 instanceof FileList) || !r2 && !i(e2))
          return e2;
        if (t2 = r2 ? [] : {}, r2 || l(e2))
          for (const r3 in e2)
            e2.hasOwnProperty(r3) && (t2[r3] = c(e2[r3]));
        else
          t2 = e2;
      }
      return t2;
    }
    var f = (e2) => Array.isArray(e2) ? e2.filter(Boolean) : [];
    var m = (e2) => void 0 === e2;
    var y = (e2, t2, r2) => {
      if (!t2 || !i(e2))
        return r2;
      const s2 = f(t2.split(/[,[\].]+?/)).reduce((e3, t3) => a(e3) ? e3 : e3[t3], e2);
      return m(s2) || s2 === e2 ? m(e2[t2]) ? r2 : e2[t2] : s2;
    };
    var p = (e2) => "boolean" == typeof e2;
    var _ = (e2) => /^\w*$/.test(e2);
    var g = (e2) => f(e2.replace(/["|']|\]/g, "").split(/\.|\[/));
    var h = (e2, t2, r2) => {
      let s2 = -1;
      const a2 = _(t2) ? [t2] : g(t2), n2 = a2.length, u2 = n2 - 1;
      for (; ++s2 < n2; ) {
        const t3 = a2[s2];
        let n3 = r2;
        if (s2 !== u2) {
          const r3 = e2[t3];
          n3 = i(r3) || Array.isArray(r3) ? r3 : isNaN(+a2[s2 + 1]) ? {} : [];
        }
        if ("__proto__" === t3)
          return;
        e2[t3] = n3, e2 = e2[t3];
      }
      return e2;
    };
    var v = { BLUR: "blur", FOCUS_OUT: "focusout", CHANGE: "change" };
    var b = { onBlur: "onBlur", onChange: "onChange", onSubmit: "onSubmit", onTouched: "onTouched", all: "all" };
    var x = "max";
    var A = "min";
    var V = "maxLength";
    var F = "minLength";
    var S = "pattern";
    var w = "required";
    var D = "validate";
    var k = t.default.createContext(null);
    var C = () => t.default.useContext(k);
    var E = (e2, t2, r2, s2 = true) => {
      const a2 = { defaultValues: t2._defaultValues };
      for (const n2 in e2)
        Object.defineProperty(a2, n2, { get: () => {
          const a3 = n2;
          return t2._proxyFormState[a3] !== b.all && (t2._proxyFormState[a3] = !s2 || b.all), r2 && (r2[a3] = true), e2[a3];
        } });
      return a2;
    };
    var O = (e2) => i(e2) && !Object.keys(e2).length;
    var j = (e2, t2, r2, s2) => {
      r2(e2);
      const { name: a2, ...n2 } = e2;
      return O(n2) || Object.keys(n2).length >= Object.keys(t2).length || Object.keys(n2).find((e3) => t2[e3] === (!s2 || b.all));
    };
    var U = (e2) => Array.isArray(e2) ? e2 : [e2];
    var T = (e2, t2, r2) => !e2 || !t2 || e2 === t2 || U(e2).some((e3) => e3 && (r2 ? e3 === t2 : e3.startsWith(t2) || t2.startsWith(e3)));
    function B(e2) {
      const r2 = t.default.useRef(e2);
      r2.current = e2, t.default.useEffect(() => {
        const t2 = !e2.disabled && r2.current.subject && r2.current.subject.subscribe({ next: r2.current.next });
        return () => {
          t2 && t2.unsubscribe();
        };
      }, [e2.disabled]);
    }
    function N(e2) {
      const r2 = C(), { control: s2 = r2.control, disabled: a2, name: n2, exact: i2 } = e2 || {}, [u2, o2] = t.default.useState(s2._formState), l2 = t.default.useRef(true), d2 = t.default.useRef({ isDirty: false, isLoading: false, dirtyFields: false, touchedFields: false, validatingFields: false, isValidating: false, isValid: false, errors: false }), c2 = t.default.useRef(n2);
      return c2.current = n2, B({ disabled: a2, next: (e3) => l2.current && T(c2.current, e3.name, i2) && j(e3, d2.current, s2._updateFormState) && o2({ ...s2._formState, ...e3 }), subject: s2._subjects.state }), t.default.useEffect(() => (l2.current = true, d2.current.isValid && s2._updateValid(true), () => {
        l2.current = false;
      }), [s2]), E(u2, s2, d2.current, false);
    }
    var L = (e2) => "string" == typeof e2;
    var M = (e2, t2, r2, s2, a2) => L(e2) ? (s2 && t2.watch.add(e2), y(r2, e2, a2)) : Array.isArray(e2) ? e2.map((e3) => (s2 && t2.watch.add(e3), y(r2, e3))) : (s2 && (t2.watchAll = true), r2);
    function R(e2) {
      const r2 = C(), { control: s2 = r2.control, name: a2, defaultValue: n2, disabled: i2, exact: u2 } = e2 || {}, o2 = t.default.useRef(a2);
      o2.current = a2, B({ disabled: i2, subject: s2._subjects.values, next: (e3) => {
        T(o2.current, e3.name, u2) && d2(c(M(o2.current, s2._names, e3.values || s2._formValues, false, n2)));
      } });
      const [l2, d2] = t.default.useState(s2._getWatch(a2, n2));
      return t.default.useEffect(() => s2._removeUnmounted()), l2;
    }
    function P(e2) {
      const r2 = C(), { name: s2, disabled: a2, control: n2 = r2.control, shouldUnregister: i2 } = e2, l2 = o(n2._names.array, s2), d2 = R({ control: n2, name: s2, defaultValue: y(n2._formValues, s2, y(n2._defaultValues, s2, e2.defaultValue)), exact: true }), f2 = N({ control: n2, name: s2 }), _2 = t.default.useRef(n2.register(s2, { ...e2.rules, value: d2, ...p(e2.disabled) ? { disabled: e2.disabled } : {} }));
      return t.default.useEffect(() => {
        const e3 = n2._options.shouldUnregister || i2, t2 = (e4, t3) => {
          const r3 = y(n2._fields, e4);
          r3 && (r3._f.mount = t3);
        };
        if (t2(s2, true), e3) {
          const e4 = c(y(n2._options.defaultValues, s2));
          h(n2._defaultValues, s2, e4), m(y(n2._formValues, s2)) && h(n2._formValues, s2, e4);
        }
        return () => {
          (l2 ? e3 && !n2._state.action : e3) ? n2.unregister(s2) : t2(s2, false);
        };
      }, [s2, n2, l2, i2]), t.default.useEffect(() => {
        y(n2._fields, s2) && n2._updateDisabledField({ disabled: a2, fields: n2._fields, name: s2, value: y(n2._fields, s2)._f.value });
      }, [a2, s2, n2]), { field: { name: s2, value: d2, ...p(a2) || f2.disabled ? { disabled: f2.disabled || a2 } : {}, onChange: t.default.useCallback((e3) => _2.current.onChange({ target: { value: u(e3), name: s2 }, type: v.CHANGE }), [s2]), onBlur: t.default.useCallback(() => _2.current.onBlur({ target: { value: y(n2._formValues, s2), name: s2 }, type: v.BLUR }), [s2, n2]), ref: (e3) => {
        const t2 = y(n2._fields, s2);
        t2 && e3 && (t2._f.ref = { focus: () => e3.focus(), select: () => e3.select(), setCustomValidity: (t3) => e3.setCustomValidity(t3), reportValidity: () => e3.reportValidity() });
      } }, formState: f2, fieldState: Object.defineProperties({}, { invalid: { enumerable: true, get: () => !!y(f2.errors, s2) }, isDirty: { enumerable: true, get: () => !!y(f2.dirtyFields, s2) }, isTouched: { enumerable: true, get: () => !!y(f2.touchedFields, s2) }, isValidating: { enumerable: true, get: () => !!y(f2.validatingFields, s2) }, error: { enumerable: true, get: () => y(f2.errors, s2) } }) };
    }
    var q = "post";
    var W = (e2, t2, r2, s2, a2) => t2 ? { ...r2[e2], types: { ...r2[e2] && r2[e2].types ? r2[e2].types : {}, [s2]: a2 || true } } : {};
    var I = () => {
      const e2 = "undefined" == typeof performance ? Date.now() : 1e3 * performance.now();
      return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (t2) => {
        const r2 = (16 * Math.random() + e2) % 16 | 0;
        return ("x" == t2 ? r2 : 3 & r2 | 8).toString(16);
      });
    };
    var $ = (e2, t2, r2 = {}) => r2.shouldFocus || m(r2.shouldFocus) ? r2.focusName || `${e2}.${m(r2.focusIndex) ? t2 : r2.focusIndex}.` : "";
    var H = (e2) => ({ isOnSubmit: !e2 || e2 === b.onSubmit, isOnBlur: e2 === b.onBlur, isOnChange: e2 === b.onChange, isOnAll: e2 === b.all, isOnTouch: e2 === b.onTouched });
    var G = (e2, t2, r2) => !r2 && (t2.watchAll || t2.watch.has(e2) || [...t2.watch].some((t3) => e2.startsWith(t3) && /^\.\w+/.test(e2.slice(t3.length))));
    var J = (e2, t2, r2, s2) => {
      for (const a2 of r2 || Object.keys(e2)) {
        const r3 = y(e2, a2);
        if (r3) {
          const { _f: e3, ...n2 } = r3;
          if (e3) {
            if (e3.refs && e3.refs[0] && t2(e3.refs[0], a2) && !s2)
              break;
            if (e3.ref && t2(e3.ref, e3.name) && !s2)
              break;
            J(n2, t2);
          } else
            i(n2) && J(n2, t2);
        }
      }
    };
    var z = (e2, t2, r2) => {
      const s2 = f(y(e2, r2));
      return h(s2, "root", t2[r2]), h(e2, r2, s2), e2;
    };
    var K = (e2) => "file" === e2.type;
    var Q = (e2) => "function" == typeof e2;
    var X = (e2) => {
      if (!d)
        return false;
      const t2 = e2 ? e2.ownerDocument : 0;
      return e2 instanceof (t2 && t2.defaultView ? t2.defaultView.HTMLElement : HTMLElement);
    };
    var Y = (e2) => L(e2);
    var Z = (e2) => "radio" === e2.type;
    var ee = (e2) => e2 instanceof RegExp;
    var te = { value: false, isValid: false };
    var re = { value: true, isValid: true };
    var se = (e2) => {
      if (Array.isArray(e2)) {
        if (e2.length > 1) {
          const t2 = e2.filter((e3) => e3 && e3.checked && !e3.disabled).map((e3) => e3.value);
          return { value: t2, isValid: !!t2.length };
        }
        return e2[0].checked && !e2[0].disabled ? e2[0].attributes && !m(e2[0].attributes.value) ? m(e2[0].value) || "" === e2[0].value ? re : { value: e2[0].value, isValid: true } : re : te;
      }
      return te;
    };
    var ae = { isValid: false, value: null };
    var ne = (e2) => Array.isArray(e2) ? e2.reduce((e3, t2) => t2 && t2.checked && !t2.disabled ? { isValid: true, value: t2.value } : e3, ae) : ae;
    function ie(e2, t2, r2 = "validate") {
      if (Y(e2) || Array.isArray(e2) && e2.every(Y) || p(e2) && !e2)
        return { type: r2, message: Y(e2) ? e2 : "", ref: t2 };
    }
    var ue = (e2) => i(e2) && !ee(e2) ? e2 : { value: e2, message: "" };
    var oe = async (e2, t2, s2, n2, u2) => {
      const { ref: o2, refs: l2, required: d2, maxLength: c2, minLength: f2, min: _2, max: g2, pattern: h2, validate: v2, name: b2, valueAsNumber: k2, mount: C2, disabled: E2 } = e2._f, j2 = y(t2, b2);
      if (!C2 || E2)
        return {};
      const U2 = l2 ? l2[0] : o2, T2 = (e3) => {
        n2 && U2.reportValidity && (U2.setCustomValidity(p(e3) ? "" : e3 || ""), U2.reportValidity());
      }, B2 = {}, N2 = Z(o2), M2 = r(o2), R2 = N2 || M2, P2 = (k2 || K(o2)) && m(o2.value) && m(j2) || X(o2) && "" === o2.value || "" === j2 || Array.isArray(j2) && !j2.length, q2 = W.bind(null, b2, s2, B2), I2 = (e3, t3, r2, s3 = V, a2 = F) => {
        const n3 = e3 ? t3 : r2;
        B2[b2] = { type: e3 ? s3 : a2, message: n3, ref: o2, ...q2(e3 ? s3 : a2, n3) };
      };
      if (u2 ? !Array.isArray(j2) || !j2.length : d2 && (!R2 && (P2 || a(j2)) || p(j2) && !j2 || M2 && !se(l2).isValid || N2 && !ne(l2).isValid)) {
        const { value: e3, message: t3 } = Y(d2) ? { value: !!d2, message: d2 } : ue(d2);
        if (e3 && (B2[b2] = { type: w, message: t3, ref: U2, ...q2(w, t3) }, !s2))
          return T2(t3), B2;
      }
      if (!(P2 || a(_2) && a(g2))) {
        let e3, t3;
        const r2 = ue(g2), n3 = ue(_2);
        if (a(j2) || isNaN(j2)) {
          const s3 = o2.valueAsDate || new Date(j2), a2 = (e4) => /* @__PURE__ */ new Date((/* @__PURE__ */ new Date()).toDateString() + " " + e4), i2 = "time" == o2.type, u3 = "week" == o2.type;
          L(r2.value) && j2 && (e3 = i2 ? a2(j2) > a2(r2.value) : u3 ? j2 > r2.value : s3 > new Date(r2.value)), L(n3.value) && j2 && (t3 = i2 ? a2(j2) < a2(n3.value) : u3 ? j2 < n3.value : s3 < new Date(n3.value));
        } else {
          const s3 = o2.valueAsNumber || (j2 ? +j2 : j2);
          a(r2.value) || (e3 = s3 > r2.value), a(n3.value) || (t3 = s3 < n3.value);
        }
        if ((e3 || t3) && (I2(!!e3, r2.message, n3.message, x, A), !s2))
          return T2(B2[b2].message), B2;
      }
      if ((c2 || f2) && !P2 && (L(j2) || u2 && Array.isArray(j2))) {
        const e3 = ue(c2), t3 = ue(f2), r2 = !a(e3.value) && j2.length > +e3.value, n3 = !a(t3.value) && j2.length < +t3.value;
        if ((r2 || n3) && (I2(r2, e3.message, t3.message), !s2))
          return T2(B2[b2].message), B2;
      }
      if (h2 && !P2 && L(j2)) {
        const { value: e3, message: t3 } = ue(h2);
        if (ee(e3) && !j2.match(e3) && (B2[b2] = { type: S, message: t3, ref: o2, ...q2(S, t3) }, !s2))
          return T2(t3), B2;
      }
      if (v2) {
        if (Q(v2)) {
          const e3 = ie(await v2(j2, t2), U2);
          if (e3 && (B2[b2] = { ...e3, ...q2(D, e3.message) }, !s2))
            return T2(e3.message), B2;
        } else if (i(v2)) {
          let e3 = {};
          for (const r2 in v2) {
            if (!O(e3) && !s2)
              break;
            const a2 = ie(await v2[r2](j2, t2), U2, r2);
            a2 && (e3 = { ...a2, ...q2(r2, a2.message) }, T2(a2.message), s2 && (B2[b2] = e3));
          }
          if (!O(e3) && (B2[b2] = { ref: U2, ...e3 }, !s2))
            return B2;
        }
      }
      return T2(true), B2;
    };
    var le = (e2, t2) => [...e2, ...U(t2)];
    var de = (e2) => Array.isArray(e2) ? e2.map(() => {
    }) : void 0;
    function ce(e2, t2, r2) {
      return [...e2.slice(0, t2), ...U(r2), ...e2.slice(t2)];
    }
    var fe = (e2, t2, r2) => Array.isArray(e2) ? (m(e2[r2]) && (e2[r2] = void 0), e2.splice(r2, 0, e2.splice(t2, 1)[0]), e2) : [];
    var me = (e2, t2) => [...U(t2), ...U(e2)];
    var ye = (e2, t2) => m(t2) ? [] : function(e3, t3) {
      let r2 = 0;
      const s2 = [...e3];
      for (const e4 of t3)
        s2.splice(e4 - r2, 1), r2++;
      return f(s2).length ? s2 : [];
    }(e2, U(t2).sort((e3, t3) => e3 - t3));
    var pe = (e2, t2, r2) => {
      [e2[t2], e2[r2]] = [e2[r2], e2[t2]];
    };
    function _e(e2, t2) {
      const r2 = Array.isArray(t2) ? t2 : _(t2) ? [t2] : g(t2), s2 = 1 === r2.length ? e2 : function(e3, t3) {
        const r3 = t3.slice(0, -1).length;
        let s3 = 0;
        for (; s3 < r3; )
          e3 = m(e3) ? s3++ : e3[t3[s3++]];
        return e3;
      }(e2, r2), a2 = r2.length - 1, n2 = r2[a2];
      return s2 && delete s2[n2], 0 !== a2 && (i(s2) && O(s2) || Array.isArray(s2) && function(e3) {
        for (const t3 in e3)
          if (e3.hasOwnProperty(t3) && !m(e3[t3]))
            return false;
        return true;
      }(s2)) && _e(e2, r2.slice(0, -1)), e2;
    }
    var ge = (e2, t2, r2) => (e2[t2] = r2, e2);
    var he = () => {
      let e2 = [];
      return { get observers() {
        return e2;
      }, next: (t2) => {
        for (const r2 of e2)
          r2.next && r2.next(t2);
      }, subscribe: (t2) => (e2.push(t2), { unsubscribe: () => {
        e2 = e2.filter((e3) => e3 !== t2);
      } }), unsubscribe: () => {
        e2 = [];
      } };
    };
    var ve = (e2) => a(e2) || !n(e2);
    function be(e2, t2) {
      if (ve(e2) || ve(t2))
        return e2 === t2;
      if (s(e2) && s(t2))
        return e2.getTime() === t2.getTime();
      const r2 = Object.keys(e2), a2 = Object.keys(t2);
      if (r2.length !== a2.length)
        return false;
      for (const n2 of r2) {
        const r3 = e2[n2];
        if (!a2.includes(n2))
          return false;
        if ("ref" !== n2) {
          const e3 = t2[n2];
          if (s(r3) && s(e3) || i(r3) && i(e3) || Array.isArray(r3) && Array.isArray(e3) ? !be(r3, e3) : r3 !== e3)
            return false;
        }
      }
      return true;
    }
    var xe = (e2) => "select-multiple" === e2.type;
    var Ae = (e2) => Z(e2) || r(e2);
    var Ve = (e2) => X(e2) && e2.isConnected;
    var Fe = (e2) => {
      for (const t2 in e2)
        if (Q(e2[t2]))
          return true;
      return false;
    };
    function Se(e2, t2 = {}) {
      const r2 = Array.isArray(e2);
      if (i(e2) || r2)
        for (const r3 in e2)
          Array.isArray(e2[r3]) || i(e2[r3]) && !Fe(e2[r3]) ? (t2[r3] = Array.isArray(e2[r3]) ? [] : {}, Se(e2[r3], t2[r3])) : a(e2[r3]) || (t2[r3] = true);
      return t2;
    }
    function we(e2, t2, r2) {
      const s2 = Array.isArray(e2);
      if (i(e2) || s2)
        for (const s3 in e2)
          Array.isArray(e2[s3]) || i(e2[s3]) && !Fe(e2[s3]) ? m(t2) || ve(r2[s3]) ? r2[s3] = Array.isArray(e2[s3]) ? Se(e2[s3], []) : { ...Se(e2[s3]) } : we(e2[s3], a(t2) ? {} : t2[s3], r2[s3]) : r2[s3] = !be(e2[s3], t2[s3]);
      return r2;
    }
    var De = (e2, t2) => we(e2, t2, Se(t2));
    var ke = (e2, { valueAsNumber: t2, valueAsDate: r2, setValueAs: s2 }) => m(e2) ? e2 : t2 ? "" === e2 ? NaN : e2 ? +e2 : e2 : r2 && L(e2) ? new Date(e2) : s2 ? s2(e2) : e2;
    function Ce(e2) {
      const t2 = e2.ref;
      if (!(e2.refs ? e2.refs.every((e3) => e3.disabled) : t2.disabled))
        return K(t2) ? t2.files : Z(t2) ? ne(e2.refs).value : xe(t2) ? [...t2.selectedOptions].map(({ value: e3 }) => e3) : r(t2) ? se(e2.refs).value : ke(m(t2.value) ? e2.ref.value : t2.value, e2);
    }
    var Ee = (e2, t2, r2, s2) => {
      const a2 = {};
      for (const r3 of e2) {
        const e3 = y(t2, r3);
        e3 && h(a2, r3, e3._f);
      }
      return { criteriaMode: r2, names: [...e2], fields: a2, shouldUseNativeValidation: s2 };
    };
    var Oe = (e2) => m(e2) ? e2 : ee(e2) ? e2.source : i(e2) ? ee(e2.value) ? e2.value.source : e2.value : e2;
    var je = (e2) => e2.mount && (e2.required || e2.min || e2.max || e2.maxLength || e2.minLength || e2.pattern || e2.validate);
    function Ue(e2, t2, r2) {
      const s2 = y(e2, r2);
      if (s2 || _(r2))
        return { error: s2, name: r2 };
      const a2 = r2.split(".");
      for (; a2.length; ) {
        const s3 = a2.join("."), n2 = y(t2, s3), i2 = y(e2, s3);
        if (n2 && !Array.isArray(n2) && r2 !== s3)
          return { name: r2 };
        if (i2 && i2.type)
          return { name: s3, error: i2 };
        a2.pop();
      }
      return { name: r2 };
    }
    var Te = (e2, t2, r2, s2, a2) => !a2.isOnAll && (!r2 && a2.isOnTouch ? !(t2 || e2) : (r2 ? s2.isOnBlur : a2.isOnBlur) ? !e2 : !(r2 ? s2.isOnChange : a2.isOnChange) || e2);
    var Be = (e2, t2) => !f(y(e2, t2)).length && _e(e2, t2);
    var Ne = { mode: b.onSubmit, reValidateMode: b.onChange, shouldFocusError: true };
    function Le(e2 = {}) {
      let t2, n2 = { ...Ne, ...e2 }, l2 = { submitCount: 0, isDirty: false, isLoading: Q(n2.defaultValues), isValidating: false, isSubmitted: false, isSubmitting: false, isSubmitSuccessful: false, isValid: false, touchedFields: {}, dirtyFields: {}, validatingFields: {}, errors: n2.errors || {}, disabled: n2.disabled || false }, _2 = {}, g2 = (i(n2.defaultValues) || i(n2.values)) && c(n2.defaultValues || n2.values) || {}, x2 = n2.shouldUnregister ? {} : c(g2), A2 = { action: false, mount: false, watch: false }, V2 = { mount: /* @__PURE__ */ new Set(), unMount: /* @__PURE__ */ new Set(), array: /* @__PURE__ */ new Set(), watch: /* @__PURE__ */ new Set() }, F2 = 0;
      const S2 = { isDirty: false, dirtyFields: false, validatingFields: false, touchedFields: false, isValidating: false, isValid: false, errors: false }, w2 = { values: he(), array: he(), state: he() }, D2 = H(n2.mode), k2 = H(n2.reValidateMode), C2 = n2.criteriaMode === b.all, E2 = async (e3) => {
        if (S2.isValid || e3) {
          const e4 = n2.resolver ? O((await R2()).errors) : await P2(_2, true);
          e4 !== l2.isValid && w2.state.next({ isValid: e4 });
        }
      }, j2 = (e3, t3) => {
        (S2.isValidating || S2.validatingFields) && ((e3 || Array.from(V2.mount)).forEach((e4) => {
          e4 && (t3 ? h(l2.validatingFields, e4, t3) : _e(l2.validatingFields, e4));
        }), w2.state.next({ validatingFields: l2.validatingFields, isValidating: !O(l2.validatingFields) }));
      }, T2 = (e3, t3, r2, s2) => {
        const a2 = y(_2, e3);
        if (a2) {
          const n3 = y(x2, e3, m(r2) ? y(g2, e3) : r2);
          m(n3) || s2 && s2.defaultChecked || t3 ? h(x2, e3, t3 ? n3 : Ce(a2._f)) : I2(e3, n3), A2.mount && E2();
        }
      }, B2 = (e3, t3, r2, s2, a2) => {
        let n3 = false, i2 = false;
        const u2 = { name: e3 }, o2 = !(!y(_2, e3) || !y(_2, e3)._f.disabled);
        if (!r2 || s2) {
          S2.isDirty && (i2 = l2.isDirty, l2.isDirty = u2.isDirty = q2(), n3 = i2 !== u2.isDirty);
          const r3 = o2 || be(y(g2, e3), t3);
          i2 = !(o2 || !y(l2.dirtyFields, e3)), r3 || o2 ? _e(l2.dirtyFields, e3) : h(l2.dirtyFields, e3, true), u2.dirtyFields = l2.dirtyFields, n3 = n3 || S2.dirtyFields && i2 !== !r3;
        }
        if (r2) {
          const t4 = y(l2.touchedFields, e3);
          t4 || (h(l2.touchedFields, e3, r2), u2.touchedFields = l2.touchedFields, n3 = n3 || S2.touchedFields && t4 !== r2);
        }
        return n3 && a2 && w2.state.next(u2), n3 ? u2 : {};
      }, N2 = (r2, s2, a2, n3) => {
        const i2 = y(l2.errors, r2), u2 = S2.isValid && p(s2) && l2.isValid !== s2;
        var o2;
        if (e2.delayError && a2 ? (o2 = () => ((e3, t3) => {
          h(l2.errors, e3, t3), w2.state.next({ errors: l2.errors });
        })(r2, a2), t2 = (e3) => {
          clearTimeout(F2), F2 = setTimeout(o2, e3);
        }, t2(e2.delayError)) : (clearTimeout(F2), t2 = null, a2 ? h(l2.errors, r2, a2) : _e(l2.errors, r2)), (a2 ? !be(i2, a2) : i2) || !O(n3) || u2) {
          const e3 = { ...n3, ...u2 && p(s2) ? { isValid: s2 } : {}, errors: l2.errors, name: r2 };
          l2 = { ...l2, ...e3 }, w2.state.next(e3);
        }
      }, R2 = async (e3) => {
        j2(e3, true);
        const t3 = await n2.resolver(x2, n2.context, Ee(e3 || V2.mount, _2, n2.criteriaMode, n2.shouldUseNativeValidation));
        return j2(e3), t3;
      }, P2 = async (e3, t3, r2 = { valid: true }) => {
        for (const s2 in e3) {
          const a2 = e3[s2];
          if (a2) {
            const { _f: e4, ...i2 } = a2;
            if (e4) {
              const i3 = V2.array.has(e4.name);
              j2([s2], true);
              const u2 = await oe(a2, x2, C2, n2.shouldUseNativeValidation && !t3, i3);
              if (j2([s2]), u2[e4.name] && (r2.valid = false, t3))
                break;
              !t3 && (y(u2, e4.name) ? i3 ? z(l2.errors, u2, e4.name) : h(l2.errors, e4.name, u2[e4.name]) : _e(l2.errors, e4.name));
            }
            i2 && await P2(i2, t3, r2);
          }
        }
        return r2.valid;
      }, q2 = (e3, t3) => (e3 && t3 && h(x2, e3, t3), !be(re2(), g2)), W2 = (e3, t3, r2) => M(e3, V2, { ...A2.mount ? x2 : m(t3) ? g2 : L(e3) ? { [e3]: t3 } : t3 }, r2, t3), I2 = (e3, t3, s2 = {}) => {
        const n3 = y(_2, e3);
        let i2 = t3;
        if (n3) {
          const s3 = n3._f;
          s3 && (!s3.disabled && h(x2, e3, ke(t3, s3)), i2 = X(s3.ref) && a(t3) ? "" : t3, xe(s3.ref) ? [...s3.ref.options].forEach((e4) => e4.selected = i2.includes(e4.value)) : s3.refs ? r(s3.ref) ? s3.refs.length > 1 ? s3.refs.forEach((e4) => (!e4.defaultChecked || !e4.disabled) && (e4.checked = Array.isArray(i2) ? !!i2.find((t4) => t4 === e4.value) : i2 === e4.value)) : s3.refs[0] && (s3.refs[0].checked = !!i2) : s3.refs.forEach((e4) => e4.checked = e4.value === i2) : K(s3.ref) ? s3.ref.value = "" : (s3.ref.value = i2, s3.ref.type || w2.values.next({ name: e3, values: { ...x2 } })));
        }
        (s2.shouldDirty || s2.shouldTouch) && B2(e3, i2, s2.shouldTouch, s2.shouldDirty, true), s2.shouldValidate && te2(e3);
      }, $2 = (e3, t3, r2) => {
        for (const a2 in t3) {
          const n3 = t3[a2], i2 = `${e3}.${a2}`, u2 = y(_2, i2);
          !V2.array.has(e3) && ve(n3) && (!u2 || u2._f) || s(n3) ? I2(i2, n3, r2) : $2(i2, n3, r2);
        }
      }, Y2 = (e3, t3, r2 = {}) => {
        const s2 = y(_2, e3), n3 = V2.array.has(e3), i2 = c(t3);
        h(x2, e3, i2), n3 ? (w2.array.next({ name: e3, values: { ...x2 } }), (S2.isDirty || S2.dirtyFields) && r2.shouldDirty && w2.state.next({ name: e3, dirtyFields: De(g2, x2), isDirty: q2(e3, i2) })) : !s2 || s2._f || a(i2) ? I2(e3, i2, r2) : $2(e3, i2, r2), G(e3, V2) && w2.state.next({ ...l2 }), w2.values.next({ name: A2.mount ? e3 : void 0, values: { ...x2 } });
      }, Z2 = async (e3) => {
        A2.mount = true;
        const r2 = e3.target;
        let s2 = r2.name, a2 = true;
        const i2 = y(_2, s2), o2 = (e4) => {
          a2 = Number.isNaN(e4) || e4 === y(x2, s2, e4);
        };
        if (i2) {
          let d2, c2;
          const f2 = r2.type ? Ce(i2._f) : u(e3), m2 = e3.type === v.BLUR || e3.type === v.FOCUS_OUT, p2 = !je(i2._f) && !n2.resolver && !y(l2.errors, s2) && !i2._f.deps || Te(m2, y(l2.touchedFields, s2), l2.isSubmitted, k2, D2), g3 = G(s2, V2, m2);
          h(x2, s2, f2), m2 ? (i2._f.onBlur && i2._f.onBlur(e3), t2 && t2(0)) : i2._f.onChange && i2._f.onChange(e3);
          const b2 = B2(s2, f2, m2, false), A3 = !O(b2) || g3;
          if (!m2 && w2.values.next({ name: s2, type: e3.type, values: { ...x2 } }), p2)
            return S2.isValid && E2(), A3 && w2.state.next({ name: s2, ...g3 ? {} : b2 });
          if (!m2 && g3 && w2.state.next({ ...l2 }), n2.resolver) {
            const { errors: e4 } = await R2([s2]);
            if (o2(f2), a2) {
              const t3 = Ue(l2.errors, _2, s2), r3 = Ue(e4, _2, t3.name || s2);
              d2 = r3.error, s2 = r3.name, c2 = O(e4);
            }
          } else
            j2([s2], true), d2 = (await oe(i2, x2, C2, n2.shouldUseNativeValidation))[s2], j2([s2]), o2(f2), a2 && (d2 ? c2 = false : S2.isValid && (c2 = await P2(_2, true)));
          a2 && (i2._f.deps && te2(i2._f.deps), N2(s2, c2, d2, b2));
        }
      }, ee2 = (e3, t3) => {
        if (y(l2.errors, t3) && e3.focus)
          return e3.focus(), 1;
      }, te2 = async (e3, t3 = {}) => {
        let r2, s2;
        const a2 = U(e3);
        if (n2.resolver) {
          const t4 = await (async (e4) => {
            const { errors: t5 } = await R2(e4);
            if (e4)
              for (const r3 of e4) {
                const e5 = y(t5, r3);
                e5 ? h(l2.errors, r3, e5) : _e(l2.errors, r3);
              }
            else
              l2.errors = t5;
            return t5;
          })(m(e3) ? e3 : a2);
          r2 = O(t4), s2 = e3 ? !a2.some((e4) => y(t4, e4)) : r2;
        } else
          e3 ? (s2 = (await Promise.all(a2.map(async (e4) => {
            const t4 = y(_2, e4);
            return await P2(t4 && t4._f ? { [e4]: t4 } : t4);
          }))).every(Boolean), (s2 || l2.isValid) && E2()) : s2 = r2 = await P2(_2);
        return w2.state.next({ ...!L(e3) || S2.isValid && r2 !== l2.isValid ? {} : { name: e3 }, ...n2.resolver || !e3 ? { isValid: r2 } : {}, errors: l2.errors }), t3.shouldFocus && !s2 && J(_2, ee2, e3 ? a2 : V2.mount), s2;
      }, re2 = (e3) => {
        const t3 = { ...A2.mount ? x2 : g2 };
        return m(e3) ? t3 : L(e3) ? y(t3, e3) : e3.map((e4) => y(t3, e4));
      }, se2 = (e3, t3) => ({ invalid: !!y((t3 || l2).errors, e3), isDirty: !!y((t3 || l2).dirtyFields, e3), isTouched: !!y((t3 || l2).touchedFields, e3), isValidating: !!y((t3 || l2).validatingFields, e3), error: y((t3 || l2).errors, e3) }), ae2 = (e3, t3, r2) => {
        const s2 = (y(_2, e3, { _f: {} })._f || {}).ref, a2 = y(l2.errors, e3) || {}, { ref: n3, message: i2, type: u2, ...o2 } = a2;
        h(l2.errors, e3, { ...o2, ...t3, ref: s2 }), w2.state.next({ name: e3, errors: l2.errors, isValid: false }), r2 && r2.shouldFocus && s2 && s2.focus && s2.focus();
      }, ne2 = (e3, t3 = {}) => {
        for (const r2 of e3 ? U(e3) : V2.mount)
          V2.mount.delete(r2), V2.array.delete(r2), t3.keepValue || (_e(_2, r2), _e(x2, r2)), !t3.keepError && _e(l2.errors, r2), !t3.keepDirty && _e(l2.dirtyFields, r2), !t3.keepTouched && _e(l2.touchedFields, r2), !t3.keepIsValidating && _e(l2.validatingFields, r2), !n2.shouldUnregister && !t3.keepDefaultValue && _e(g2, r2);
        w2.values.next({ values: { ...x2 } }), w2.state.next({ ...l2, ...t3.keepDirty ? { isDirty: q2() } : {} }), !t3.keepIsValid && E2();
      }, ie2 = ({ disabled: e3, name: t3, field: r2, fields: s2, value: a2 }) => {
        if (p(e3) && A2.mount || e3) {
          const n3 = e3 ? void 0 : m(a2) ? Ce(r2 ? r2._f : y(s2, t3)._f) : a2;
          h(x2, t3, n3), B2(t3, n3, false, false, true);
        }
      }, ue2 = (e3, t3 = {}) => {
        let r2 = y(_2, e3);
        const s2 = p(t3.disabled);
        return h(_2, e3, { ...r2 || {}, _f: { ...r2 && r2._f ? r2._f : { ref: { name: e3 } }, name: e3, mount: true, ...t3 } }), V2.mount.add(e3), r2 ? ie2({ field: r2, disabled: t3.disabled, name: e3, value: t3.value }) : T2(e3, true, t3.value), { ...s2 ? { disabled: t3.disabled } : {}, ...n2.progressive ? { required: !!t3.required, min: Oe(t3.min), max: Oe(t3.max), minLength: Oe(t3.minLength), maxLength: Oe(t3.maxLength), pattern: Oe(t3.pattern) } : {}, name: e3, onChange: Z2, onBlur: Z2, ref: (s3) => {
          if (s3) {
            ue2(e3, t3), r2 = y(_2, e3);
            const a2 = m(s3.value) && s3.querySelectorAll && s3.querySelectorAll("input,select,textarea")[0] || s3, n3 = Ae(a2), i2 = r2._f.refs || [];
            if (n3 ? i2.find((e4) => e4 === a2) : a2 === r2._f.ref)
              return;
            h(_2, e3, { _f: { ...r2._f, ...n3 ? { refs: [...i2.filter(Ve), a2, ...Array.isArray(y(g2, e3)) ? [{}] : []], ref: { type: a2.type, name: e3 } } : { ref: a2 } } }), T2(e3, false, void 0, a2);
          } else
            r2 = y(_2, e3, {}), r2._f && (r2._f.mount = false), (n2.shouldUnregister || t3.shouldUnregister) && (!o(V2.array, e3) || !A2.action) && V2.unMount.add(e3);
        } };
      }, le2 = () => n2.shouldFocusError && J(_2, ee2, V2.mount), de2 = (e3, t3) => async (r2) => {
        let s2;
        r2 && (r2.preventDefault && r2.preventDefault(), r2.persist && r2.persist());
        let a2 = c(x2);
        if (w2.state.next({ isSubmitting: true }), n2.resolver) {
          const { errors: e4, values: t4 } = await R2();
          l2.errors = e4, a2 = t4;
        } else
          await P2(_2);
        if (_e(l2.errors, "root"), O(l2.errors)) {
          w2.state.next({ errors: {} });
          try {
            await e3(a2, r2);
          } catch (e4) {
            s2 = e4;
          }
        } else
          t3 && await t3({ ...l2.errors }, r2), le2(), setTimeout(le2);
        if (w2.state.next({ isSubmitted: true, isSubmitting: false, isSubmitSuccessful: O(l2.errors) && !s2, submitCount: l2.submitCount + 1, errors: l2.errors }), s2)
          throw s2;
      }, ce2 = (t3, r2 = {}) => {
        const s2 = t3 ? c(t3) : g2, a2 = c(s2), n3 = O(t3), i2 = n3 ? g2 : a2;
        if (r2.keepDefaultValues || (g2 = s2), !r2.keepValues) {
          if (r2.keepDirtyValues)
            for (const e3 of V2.mount)
              y(l2.dirtyFields, e3) ? h(i2, e3, y(x2, e3)) : Y2(e3, y(i2, e3));
          else {
            if (d && m(t3))
              for (const e3 of V2.mount) {
                const t4 = y(_2, e3);
                if (t4 && t4._f) {
                  const e4 = Array.isArray(t4._f.refs) ? t4._f.refs[0] : t4._f.ref;
                  if (X(e4)) {
                    const t5 = e4.closest("form");
                    if (t5) {
                      t5.reset();
                      break;
                    }
                  }
                }
              }
            _2 = {};
          }
          x2 = e2.shouldUnregister ? r2.keepDefaultValues ? c(g2) : {} : c(i2), w2.array.next({ values: { ...i2 } }), w2.values.next({ values: { ...i2 } });
        }
        V2 = { mount: r2.keepDirtyValues ? V2.mount : /* @__PURE__ */ new Set(), unMount: /* @__PURE__ */ new Set(), array: /* @__PURE__ */ new Set(), watch: /* @__PURE__ */ new Set(), watchAll: false, focus: "" }, A2.mount = !S2.isValid || !!r2.keepIsValid || !!r2.keepDirtyValues, A2.watch = !!e2.shouldUnregister, w2.state.next({ submitCount: r2.keepSubmitCount ? l2.submitCount : 0, isDirty: !n3 && (r2.keepDirty ? l2.isDirty : !(!r2.keepDefaultValues || be(t3, g2))), isSubmitted: !!r2.keepIsSubmitted && l2.isSubmitted, dirtyFields: n3 ? [] : r2.keepDirtyValues ? r2.keepDefaultValues && x2 ? De(g2, x2) : l2.dirtyFields : r2.keepDefaultValues && t3 ? De(g2, t3) : {}, touchedFields: r2.keepTouched ? l2.touchedFields : {}, errors: r2.keepErrors ? l2.errors : {}, isSubmitSuccessful: !!r2.keepIsSubmitSuccessful && l2.isSubmitSuccessful, isSubmitting: false });
      }, fe2 = (e3, t3) => ce2(Q(e3) ? e3(x2) : e3, t3);
      return { control: { register: ue2, unregister: ne2, getFieldState: se2, handleSubmit: de2, setError: ae2, _executeSchema: R2, _getWatch: W2, _getDirty: q2, _updateValid: E2, _removeUnmounted: () => {
        for (const e3 of V2.unMount) {
          const t3 = y(_2, e3);
          t3 && (t3._f.refs ? t3._f.refs.every((e4) => !Ve(e4)) : !Ve(t3._f.ref)) && ne2(e3);
        }
        V2.unMount = /* @__PURE__ */ new Set();
      }, _updateFieldArray: (e3, t3 = [], r2, s2, a2 = true, n3 = true) => {
        if (s2 && r2) {
          if (A2.action = true, n3 && Array.isArray(y(_2, e3))) {
            const t4 = r2(y(_2, e3), s2.argA, s2.argB);
            a2 && h(_2, e3, t4);
          }
          if (n3 && Array.isArray(y(l2.errors, e3))) {
            const t4 = r2(y(l2.errors, e3), s2.argA, s2.argB);
            a2 && h(l2.errors, e3, t4), Be(l2.errors, e3);
          }
          if (S2.touchedFields && n3 && Array.isArray(y(l2.touchedFields, e3))) {
            const t4 = r2(y(l2.touchedFields, e3), s2.argA, s2.argB);
            a2 && h(l2.touchedFields, e3, t4);
          }
          S2.dirtyFields && (l2.dirtyFields = De(g2, x2)), w2.state.next({ name: e3, isDirty: q2(e3, t3), dirtyFields: l2.dirtyFields, errors: l2.errors, isValid: l2.isValid });
        } else
          h(x2, e3, t3);
      }, _updateDisabledField: ie2, _getFieldArray: (t3) => f(y(A2.mount ? x2 : g2, t3, e2.shouldUnregister ? y(g2, t3, []) : [])), _reset: ce2, _resetDefaultValues: () => Q(n2.defaultValues) && n2.defaultValues().then((e3) => {
        fe2(e3, n2.resetOptions), w2.state.next({ isLoading: false });
      }), _updateFormState: (e3) => {
        l2 = { ...l2, ...e3 };
      }, _disableForm: (e3) => {
        p(e3) && (w2.state.next({ disabled: e3 }), J(_2, (t3, r2) => {
          const s2 = y(_2, r2);
          s2 && (t3.disabled = s2._f.disabled || e3, Array.isArray(s2._f.refs) && s2._f.refs.forEach((t4) => {
            t4.disabled = s2._f.disabled || e3;
          }));
        }, 0, false));
      }, _subjects: w2, _proxyFormState: S2, _setErrors: (e3) => {
        l2.errors = e3, w2.state.next({ errors: l2.errors, isValid: false });
      }, get _fields() {
        return _2;
      }, get _formValues() {
        return x2;
      }, get _state() {
        return A2;
      }, set _state(e3) {
        A2 = e3;
      }, get _defaultValues() {
        return g2;
      }, get _names() {
        return V2;
      }, set _names(e3) {
        V2 = e3;
      }, get _formState() {
        return l2;
      }, set _formState(e3) {
        l2 = e3;
      }, get _options() {
        return n2;
      }, set _options(e3) {
        n2 = { ...n2, ...e3 };
      } }, trigger: te2, register: ue2, handleSubmit: de2, watch: (e3, t3) => Q(e3) ? w2.values.subscribe({ next: (r2) => e3(W2(void 0, t3), r2) }) : W2(e3, t3, true), setValue: Y2, getValues: re2, reset: fe2, resetField: (e3, t3 = {}) => {
        y(_2, e3) && (m(t3.defaultValue) ? Y2(e3, c(y(g2, e3))) : (Y2(e3, t3.defaultValue), h(g2, e3, c(t3.defaultValue))), t3.keepTouched || _e(l2.touchedFields, e3), t3.keepDirty || (_e(l2.dirtyFields, e3), l2.isDirty = t3.defaultValue ? q2(e3, c(y(g2, e3))) : q2()), t3.keepError || (_e(l2.errors, e3), S2.isValid && E2()), w2.state.next({ ...l2 }));
      }, clearErrors: (e3) => {
        e3 && U(e3).forEach((e4) => _e(l2.errors, e4)), w2.state.next({ errors: e3 ? l2.errors : {} });
      }, unregister: ne2, setError: ae2, setFocus: (e3, t3 = {}) => {
        const r2 = y(_2, e3), s2 = r2 && r2._f;
        if (s2) {
          const e4 = s2.refs ? s2.refs[0] : s2.ref;
          e4.focus && (e4.focus(), t3.shouldSelect && e4.select());
        }
      }, getFieldState: se2 };
    }
    exports.Controller = (e2) => e2.render(P(e2)), exports.Form = function(e2) {
      const r2 = C(), [s2, a2] = t.default.useState(false), { control: n2 = r2.control, onSubmit: i2, children: u2, action: o2, method: l2 = q, headers: d2, encType: c2, onError: f2, render: m2, onSuccess: p2, validateStatus: _2, ...g2 } = e2, h2 = async (t2) => {
        let r3 = false, s3 = "";
        await n2.handleSubmit(async (e3) => {
          const a3 = new FormData();
          let u3 = "";
          try {
            u3 = JSON.stringify(e3);
          } catch (e4) {
          }
          for (const t3 of n2._names.mount)
            a3.append(t3, y(e3, t3));
          if (i2 && await i2({ data: e3, event: t2, method: l2, formData: a3, formDataJson: u3 }), o2)
            try {
              const e4 = [d2 && d2["Content-Type"], c2].some((e5) => e5 && e5.includes("json")), t3 = await fetch(o2, { method: l2, headers: { ...d2, ...c2 ? { "Content-Type": c2 } : {} }, body: e4 ? u3 : a3 });
              t3 && (_2 ? !_2(t3.status) : t3.status < 200 || t3.status >= 300) ? (r3 = true, f2 && f2({ response: t3 }), s3 = String(t3.status)) : p2 && p2({ response: t3 });
            } catch (e4) {
              r3 = true, f2 && f2({ error: e4 });
            }
        })(t2), r3 && e2.control && (e2.control._subjects.state.next({ isSubmitSuccessful: false }), e2.control.setError("root.server", { type: s3 }));
      };
      return t.default.useEffect(() => {
        a2(true);
      }, []), m2 ? t.default.createElement(t.default.Fragment, null, m2({ submit: h2 })) : t.default.createElement("form", { noValidate: s2, action: o2, method: l2, encType: c2, onSubmit: h2, ...g2 }, u2);
    }, exports.FormProvider = (e2) => {
      const { children: r2, ...s2 } = e2;
      return t.default.createElement(k.Provider, { value: s2 }, r2);
    }, exports.appendErrors = W, exports.get = y, exports.set = h, exports.useController = P, exports.useFieldArray = function(e2) {
      const r2 = C(), { control: s2 = r2.control, name: a2, keyName: n2 = "id", shouldUnregister: i2 } = e2, [u2, o2] = t.default.useState(s2._getFieldArray(a2)), l2 = t.default.useRef(s2._getFieldArray(a2).map(I)), d2 = t.default.useRef(u2), f2 = t.default.useRef(a2), m2 = t.default.useRef(false);
      f2.current = a2, d2.current = u2, s2._names.array.add(a2), e2.rules && s2.register(a2, e2.rules), B({ next: ({ values: e3, name: t2 }) => {
        if (t2 === f2.current || !t2) {
          const t3 = y(e3, f2.current);
          Array.isArray(t3) && (o2(t3), l2.current = t3.map(I));
        }
      }, subject: s2._subjects.array });
      const p2 = t.default.useCallback((e3) => {
        m2.current = true, s2._updateFieldArray(a2, e3);
      }, [s2, a2]);
      return t.default.useEffect(() => {
        if (s2._state.action = false, G(a2, s2._names) && s2._subjects.state.next({ ...s2._formState }), m2.current && (!H(s2._options.mode).isOnSubmit || s2._formState.isSubmitted))
          if (s2._options.resolver)
            s2._executeSchema([a2]).then((e3) => {
              const t2 = y(e3.errors, a2), r3 = y(s2._formState.errors, a2);
              (r3 ? !t2 && r3.type || t2 && (r3.type !== t2.type || r3.message !== t2.message) : t2 && t2.type) && (t2 ? h(s2._formState.errors, a2, t2) : _e(s2._formState.errors, a2), s2._subjects.state.next({ errors: s2._formState.errors }));
            });
          else {
            const e3 = y(s2._fields, a2);
            !e3 || !e3._f || H(s2._options.reValidateMode).isOnSubmit && H(s2._options.mode).isOnSubmit || oe(e3, s2._formValues, s2._options.criteriaMode === b.all, s2._options.shouldUseNativeValidation, true).then((e4) => !O(e4) && s2._subjects.state.next({ errors: z(s2._formState.errors, e4, a2) }));
          }
        s2._subjects.values.next({ name: a2, values: { ...s2._formValues } }), s2._names.focus && J(s2._fields, (e3, t2) => {
          if (s2._names.focus && t2.startsWith(s2._names.focus) && e3.focus)
            return e3.focus(), 1;
        }), s2._names.focus = "", s2._updateValid(), m2.current = false;
      }, [u2, a2, s2]), t.default.useEffect(() => (!y(s2._formValues, a2) && s2._updateFieldArray(a2), () => {
        (s2._options.shouldUnregister || i2) && s2.unregister(a2);
      }), [a2, s2, n2, i2]), { swap: t.default.useCallback((e3, t2) => {
        const r3 = s2._getFieldArray(a2);
        pe(r3, e3, t2), pe(l2.current, e3, t2), p2(r3), o2(r3), s2._updateFieldArray(a2, r3, pe, { argA: e3, argB: t2 }, false);
      }, [p2, a2, s2]), move: t.default.useCallback((e3, t2) => {
        const r3 = s2._getFieldArray(a2);
        fe(r3, e3, t2), fe(l2.current, e3, t2), p2(r3), o2(r3), s2._updateFieldArray(a2, r3, fe, { argA: e3, argB: t2 }, false);
      }, [p2, a2, s2]), prepend: t.default.useCallback((e3, t2) => {
        const r3 = U(c(e3)), n3 = me(s2._getFieldArray(a2), r3);
        s2._names.focus = $(a2, 0, t2), l2.current = me(l2.current, r3.map(I)), p2(n3), o2(n3), s2._updateFieldArray(a2, n3, me, { argA: de(e3) });
      }, [p2, a2, s2]), append: t.default.useCallback((e3, t2) => {
        const r3 = U(c(e3)), n3 = le(s2._getFieldArray(a2), r3);
        s2._names.focus = $(a2, n3.length - 1, t2), l2.current = le(l2.current, r3.map(I)), p2(n3), o2(n3), s2._updateFieldArray(a2, n3, le, { argA: de(e3) });
      }, [p2, a2, s2]), remove: t.default.useCallback((e3) => {
        const t2 = ye(s2._getFieldArray(a2), e3);
        l2.current = ye(l2.current, e3), p2(t2), o2(t2), s2._updateFieldArray(a2, t2, ye, { argA: e3 });
      }, [p2, a2, s2]), insert: t.default.useCallback((e3, t2, r3) => {
        const n3 = U(c(t2)), i3 = ce(s2._getFieldArray(a2), e3, n3);
        s2._names.focus = $(a2, e3, r3), l2.current = ce(l2.current, e3, n3.map(I)), p2(i3), o2(i3), s2._updateFieldArray(a2, i3, ce, { argA: e3, argB: de(t2) });
      }, [p2, a2, s2]), update: t.default.useCallback((e3, t2) => {
        const r3 = c(t2), n3 = ge(s2._getFieldArray(a2), e3, r3);
        l2.current = [...n3].map((t3, r4) => t3 && r4 !== e3 ? l2.current[r4] : I()), p2(n3), o2([...n3]), s2._updateFieldArray(a2, n3, ge, { argA: e3, argB: r3 }, true, false);
      }, [p2, a2, s2]), replace: t.default.useCallback((e3) => {
        const t2 = U(c(e3));
        l2.current = t2.map(I), p2([...t2]), o2([...t2]), s2._updateFieldArray(a2, [...t2], (e4) => e4, {}, true, false);
      }, [p2, a2, s2]), fields: t.default.useMemo(() => u2.map((e3, t2) => ({ ...e3, [n2]: l2.current[t2] || I() })), [u2, n2]) };
    }, exports.useForm = function(e2 = {}) {
      const r2 = t.default.useRef(), s2 = t.default.useRef(), [a2, n2] = t.default.useState({ isDirty: false, isValidating: false, isLoading: Q(e2.defaultValues), isSubmitted: false, isSubmitting: false, isSubmitSuccessful: false, isValid: false, submitCount: 0, dirtyFields: {}, touchedFields: {}, validatingFields: {}, errors: e2.errors || {}, disabled: e2.disabled || false, defaultValues: Q(e2.defaultValues) ? void 0 : e2.defaultValues });
      r2.current || (r2.current = { ...Le(e2), formState: a2 });
      const i2 = r2.current.control;
      return i2._options = e2, B({ subject: i2._subjects.state, next: (e3) => {
        j(e3, i2._proxyFormState, i2._updateFormState, true) && n2({ ...i2._formState });
      } }), t.default.useEffect(() => i2._disableForm(e2.disabled), [i2, e2.disabled]), t.default.useEffect(() => {
        if (i2._proxyFormState.isDirty) {
          const e3 = i2._getDirty();
          e3 !== a2.isDirty && i2._subjects.state.next({ isDirty: e3 });
        }
      }, [i2, a2.isDirty]), t.default.useEffect(() => {
        e2.values && !be(e2.values, s2.current) ? (i2._reset(e2.values, i2._options.resetOptions), s2.current = e2.values, n2((e3) => ({ ...e3 }))) : i2._resetDefaultValues();
      }, [e2.values, i2]), t.default.useEffect(() => {
        e2.errors && i2._setErrors(e2.errors);
      }, [e2.errors, i2]), t.default.useEffect(() => {
        i2._state.mount || (i2._updateValid(), i2._state.mount = true), i2._state.watch && (i2._state.watch = false, i2._subjects.state.next({ ...i2._formState })), i2._removeUnmounted();
      }), t.default.useEffect(() => {
        e2.shouldUnregister && i2._subjects.values.next({ values: i2._getWatch() });
      }, [e2.shouldUnregister, i2]), r2.current.formState = E(a2, i2), r2.current;
    }, exports.useFormContext = C, exports.useFormState = N, exports.useWatch = R;
  }
});

// ../node_modules/@redwoodjs/forms/dist/ServerErrorsContext.js
var require_ServerErrorsContext = __commonJS({
  "../node_modules/@redwoodjs/forms/dist/ServerErrorsContext.js"(exports) {
    "use strict";
    var _Object$defineProperty = require_define_property();
    var _interopRequireDefault = require_interopRequireDefault().default;
    _Object$defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ServerErrorsContext = void 0;
    var _react = _interopRequireDefault(require_react());
    var ServerErrorsContext = exports.ServerErrorsContext = _react.default.createContext({});
  }
});

// ../node_modules/@redwoodjs/forms/dist/useErrorStyles.js
var require_useErrorStyles = __commonJS({
  "../node_modules/@redwoodjs/forms/dist/useErrorStyles.js"(exports) {
    "use strict";
    var _Object$defineProperty = require_define_property();
    var _interopRequireWildcard = require_interopRequireWildcard().default;
    _Object$defineProperty(exports, "__esModule", {
      value: true
    });
    exports.useErrorStyles = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _reactHookForm = require_index_cjs();
    var _ServerErrorsContext = require_ServerErrorsContext();
    var useErrorStyles = (_ref) => {
      let {
        name,
        errorClassName,
        errorStyle,
        className,
        style
      } = _ref;
      const {
        formState: {
          errors
        },
        setError
      } = (0, _reactHookForm.useFormContext)();
      const serverError = (0, _react.useContext)(_ServerErrorsContext.ServerErrorsContext)[name];
      _react.default.useEffect(() => {
        if (serverError) {
          setError(name, {
            type: "server",
            message: serverError
          });
        }
      }, [serverError, name, setError]);
      const validationError = name ? (0, _reactHookForm.get)(errors, name) : void 0;
      if (validationError) {
        if (errorClassName) {
          className = errorClassName;
        }
        if (errorStyle) {
          style = errorStyle;
        }
      }
      return {
        className,
        style
      };
    };
    exports.useErrorStyles = useErrorStyles;
  }
});

// ../node_modules/@redwoodjs/forms/dist/coercion.js
var require_coercion = __commonJS({
  "../node_modules/@redwoodjs/forms/dist/coercion.js"(exports) {
    "use strict";
    var _Object$defineProperty = require_define_property();
    _Object$defineProperty(exports, "__esModule", {
      value: true
    });
    exports.setCoercion = void 0;
    var isValueEmpty = (val) => val === "";
    var SET_VALUE_AS_FUNCTIONS = {
      // valueAsBoolean is commented out as r-h-f does not currently support
      // setValueAs functionality for checkboxes.  May investigate future
      // integration
      /*  valueAsBoolean: {
        // r-h-f returns a boolean if a checkBox type, but also handle string case in case valueAsBoolean is used
        base: (val: boolean | string): boolean => !!val,
        emptyAsNull: (val: boolean | string): boolean | null => (val ? true : null),
        emptyAsUndefined: (val: boolean | string): boolean | undefined =>
          val ? true : undefined,
      },*/
      valueAsDate: {
        emptyAsNull: (val) => isValueEmpty(val) ? null : new Date(val),
        emptyAsUndefined: (val) => isValueEmpty(val) ? void 0 : new Date(val),
        emptyAsString: (val) => isValueEmpty(val) ? "" : new Date(val),
        emptyAsZero: (val) => isValueEmpty(val) ? 0 : new Date(val)
      },
      valueAsJSON: {
        emptyAsNull: (val) => {
          if (isValueEmpty(val)) {
            return null;
          }
          try {
            return JSON.parse(val);
          } catch (e) {
            return NaN;
          }
        },
        emptyAsString: (val) => {
          if (isValueEmpty(val)) {
            return "";
          }
          try {
            return JSON.parse(val);
          } catch (e) {
            return NaN;
          }
        },
        emptyAsUndefined: (val) => {
          if (isValueEmpty(val)) {
            return void 0;
          }
          try {
            return JSON.parse(val);
          } catch (e) {
            return NaN;
          }
        },
        emptyAsZero: (val) => {
          if (isValueEmpty(val)) {
            return 0;
          }
          try {
            return JSON.parse(val);
          } catch (e) {
            return NaN;
          }
        }
      },
      valueAsNumber: {
        emptyAsNull: (val) => isValueEmpty(val) ? null : +val,
        emptyAsUndefined: (val) => isValueEmpty(val) ? void 0 : +val,
        emptyAsNaN: (val) => isValueEmpty(val) ? NaN : +val,
        emptyAsString: (val) => isValueEmpty(val) ? "" : +val,
        emptyAsZero: (val) => isValueEmpty(val) ? 0 : +val
      },
      valueAsString: {
        emptyAsNull: (val) => isValueEmpty(val) ? null : val,
        emptyAsUndefined: (val) => isValueEmpty(val) ? void 0 : val,
        emptyAsString: (val) => isValueEmpty(val) ? "" : val,
        emptyAsZero: (val) => isValueEmpty(val) ? 0 : val
      }
    };
    var getSetValueAsFn = (type, emptyAs, required, isId) => {
      const typeObj = SET_VALUE_AS_FUNCTIONS[type];
      if (typeObj === void 0) {
        throw Error(`Type ${type} is unsupported.`);
      }
      let fn;
      switch (emptyAs) {
        case null:
          fn = typeObj["emptyAsNull"];
          break;
        case "undefined":
          fn = typeObj["emptyAsUndefined"];
          break;
        case 0:
          fn = typeObj["emptyAsZero"];
          break;
        case "":
          fn = typeObj["emptyAsString"];
          break;
        case void 0:
        default:
          if (required || isId) {
            fn = typeObj.emptyAsNull;
          } else {
            switch (type) {
              case "valueAsNumber":
                fn = typeObj.emptyAsNaN;
                break;
              case "valueAsDate":
              case "valueAsJSON":
                fn = typeObj.emptyAsNull;
                break;
              case "valueAsString":
                fn = typeObj.emptyAsString;
                break;
            }
          }
          break;
      }
      if (fn === void 0) {
        console.error(`emptyAs prop of ${emptyAs} is unsupported for this type.`);
      }
      return fn;
    };
    var JSONValidation = (val) => typeof val === "number" ? !isNaN(val) : true;
    var setCoercion = (validation, _ref) => {
      let {
        type,
        name,
        emptyAs
      } = _ref;
      if (validation.setValueAs) {
        return;
      }
      let valueAs;
      if (validation.valueAsBoolean || type === "checkbox") {
        return;
      } else if (validation.valueAsJSON) {
        validation.validate = JSONValidation;
        delete validation.valueAsJSON;
        valueAs = "valueAsJSON";
      } else if (type === "date" || type === "datetime-local" || validation.valueAsDate) {
        valueAs = "valueAsDate";
      } else if (type === "number" || validation.valueAsNumber) {
        valueAs = "valueAsNumber";
        if (validation.valueAsNumber && emptyAs !== void 0) {
          delete validation.valueAsNumber;
        }
      } else {
        valueAs = "valueAsString";
      }
      validation.setValueAs = getSetValueAsFn(
        valueAs,
        // type
        emptyAs,
        // emptyAs
        validation.required !== void 0 && validation.required !== false,
        // required
        /Id$/.test(name || "")
        // isId
      );
    };
    exports.setCoercion = setCoercion;
  }
});

// ../node_modules/@redwoodjs/forms/dist/useRegister.js
var require_useRegister = __commonJS({
  "../node_modules/@redwoodjs/forms/dist/useRegister.js"(exports) {
    "use strict";
    var _Object$defineProperty = require_define_property();
    _Object$defineProperty(exports, "__esModule", {
      value: true
    });
    exports.useRegister = void 0;
    var _reactHookForm = require_index_cjs();
    var _coercion = require_coercion();
    var useRegister = (props, ref, emptyAs) => {
      const {
        register
      } = (0, _reactHookForm.useFormContext)();
      const {
        name
      } = props;
      if (!name) {
        throw Error("`name` prop must be provided");
      }
      const validation = props.validation || {
        required: false
      };
      (0, _coercion.setCoercion)(validation, {
        type: props.type,
        name,
        emptyAs
      });
      const {
        ref: _ref,
        onBlur: handleBlur,
        onChange: handleChange,
        ...rest
      } = register(name, validation);
      const onBlur = (event) => {
        var _a;
        handleBlur(event);
        (_a = props.onBlur) == null ? void 0 : _a.call(props, event);
      };
      const onChange = (event) => {
        var _a;
        handleChange(event);
        (_a = props.onChange) == null ? void 0 : _a.call(props, event);
      };
      return {
        ...rest,
        ref: (element) => {
          _ref(element);
          if (typeof ref === "function") {
            ref(element);
          } else if (ref) {
            ref.current = element;
          }
        },
        onBlur,
        onChange
      };
    };
    exports.useRegister = useRegister;
  }
});

// ../node_modules/@redwoodjs/forms/dist/CheckboxField.js
var require_CheckboxField = __commonJS({
  "../node_modules/@redwoodjs/forms/dist/CheckboxField.js"(exports) {
    "use strict";
    var _Object$defineProperty = require_define_property();
    var _interopRequireWildcard = require_interopRequireWildcard().default;
    _Object$defineProperty(exports, "__esModule", {
      value: true
    });
    exports.CheckboxField = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _useErrorStyles = require_useErrorStyles();
    var _useRegister = require_useRegister();
    var _jsxRuntime = require_jsx_runtime();
    var CheckboxField = exports.CheckboxField = (0, _react.forwardRef)((_ref, ref) => {
      let {
        name,
        id,
        // for useErrorStyles
        errorClassName,
        errorStyle,
        className,
        style,
        // for useRegister
        validation,
        onBlur,
        onChange,
        ...rest
      } = _ref;
      const styles = (0, _useErrorStyles.useErrorStyles)({
        name,
        errorClassName,
        errorStyle,
        className,
        style
      });
      const type = "checkbox";
      const useRegisterReturn = (0, _useRegister.useRegister)({
        name,
        validation,
        onBlur,
        onChange,
        type
      }, ref);
      return (0, _jsxRuntime.jsx)("input", {
        id: id || name,
        ...rest,
        /** This order ensures type="checkbox" */
        type,
        ...styles,
        ...useRegisterReturn
      });
    });
  }
});

// ../node_modules/@redwoodjs/forms/dist/FieldError.js
var require_FieldError = __commonJS({
  "../node_modules/@redwoodjs/forms/dist/FieldError.js"(exports) {
    "use strict";
    var _Object$defineProperty = require_define_property();
    var _interopRequireDefault = require_interopRequireDefault().default;
    _Object$defineProperty(exports, "__esModule", {
      value: true
    });
    exports.FieldError = void 0;
    var _react = _interopRequireDefault(require_react());
    var _reactHookForm = require_index_cjs();
    var _jsxRuntime = require_jsx_runtime();
    var DEFAULT_MESSAGES = {
      required: "is required",
      pattern: "is not formatted correctly",
      minLength: "is too short",
      maxLength: "is too long",
      min: "is too low",
      max: "is too high",
      validate: "is not valid"
    };
    var FieldError = (_ref) => {
      let {
        name,
        ...rest
      } = _ref;
      const {
        formState: {
          errors
        }
      } = (0, _reactHookForm.useFormContext)();
      const validationError = (0, _reactHookForm.get)(errors, name);
      const errorMessage = validationError && (validationError.message || `${name} ${DEFAULT_MESSAGES[validationError.type]}`);
      return validationError ? (0, _jsxRuntime.jsx)("span", {
        ...rest,
        children: errorMessage
      }) : null;
    };
    exports.FieldError = FieldError;
  }
});

// ../node_modules/@redwoodjs/forms/dist/Form.js
var require_Form = __commonJS({
  "../node_modules/@redwoodjs/forms/dist/Form.js"(exports) {
    "use strict";
    var _Object$defineProperty = require_define_property();
    var _interopRequireWildcard = require_interopRequireWildcard().default;
    _Object$defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Form = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _reactHookForm = require_index_cjs();
    var _ServerErrorsContext = require_ServerErrorsContext();
    var _jsxRuntime = require_jsx_runtime();
    function FormInner(_ref, ref) {
      var _a, _b, _c, _d;
      let {
        config,
        error: errorProps,
        formMethods: propFormMethods,
        onSubmit,
        children,
        ...rest
      } = _ref;
      const hookFormMethods = (0, _reactHookForm.useForm)(config);
      const formMethods = propFormMethods || hookFormMethods;
      return (0, _jsxRuntime.jsx)("form", {
        ref,
        ...rest,
        onSubmit: formMethods.handleSubmit((data, event) => onSubmit == null ? void 0 : onSubmit(data, event)),
        children: (0, _jsxRuntime.jsx)(_ServerErrorsContext.ServerErrorsContext.Provider, {
          value: ((_d = (_c = (_b = (_a = errorProps == null ? void 0 : errorProps.graphQLErrors) == null ? void 0 : _a[0]) == null ? void 0 : _b.extensions) == null ? void 0 : _c.properties) == null ? void 0 : _d.messages) || {},
          children: (0, _jsxRuntime.jsx)(_reactHookForm.FormProvider, {
            ...formMethods,
            children
          })
        })
      });
    }
    var Form = exports.Form = (0, _react.forwardRef)(FormInner);
  }
});

// ../node_modules/@redwoodjs/forms/dist/FormError.js
var require_FormError = __commonJS({
  "../node_modules/@redwoodjs/forms/dist/FormError.js"(exports) {
    "use strict";
    var _Object$defineProperty = require_define_property();
    var _interopRequireDefault = require_interopRequireDefault().default;
    _Object$defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _keys = _interopRequireDefault(require_keys());
    var _forEach = _interopRequireDefault(require_for_each());
    var _indexOf = _interopRequireDefault(require_index_of());
    var _map = _interopRequireDefault(require_map());
    var _jsxRuntime = require_jsx_runtime();
    var FormError = (_ref) => {
      var _a, _b, _c, _d, _e;
      let {
        error,
        wrapperClassName,
        wrapperStyle,
        titleClassName,
        titleStyle,
        listClassName,
        listStyle,
        listItemClassName,
        listItemStyle
      } = _ref;
      if (!error) {
        return null;
      }
      let rootMessage = error.message;
      const messages = [];
      const hasGraphQLError = !!((_a = error.graphQLErrors) == null ? void 0 : _a[0]);
      const hasNetworkError = !!error.networkError && (0, _keys.default)(error.networkError).length > 0;
      if (hasGraphQLError) {
        var _error$graphQLErrors$;
        rootMessage = (_error$graphQLErrors$ = error.graphQLErrors[0].message) !== null && _error$graphQLErrors$ !== void 0 ? _error$graphQLErrors$ : "Something went wrong";
        if (((_c = (_b = error.graphQLErrors[0]) == null ? void 0 : _b.extensions) == null ? void 0 : _c.code) === "BAD_USER_INPUT") {
          rootMessage = "Errors prevented this form from being saved";
        }
        const properties = (_d = error.graphQLErrors[0].extensions) == null ? void 0 : _d["properties"];
        const propertyMessages = properties && properties["messages"];
        if (propertyMessages) {
          for (const e in propertyMessages) {
            var _context;
            (0, _forEach.default)(_context = propertyMessages[e]).call(_context, (fieldError) => {
              messages.push(fieldError);
            });
          }
        }
      } else if (hasNetworkError) {
        var _rootMessage;
        rootMessage = (_rootMessage = rootMessage) !== null && _rootMessage !== void 0 ? _rootMessage : "An error has occurred";
        if (Object.prototype.hasOwnProperty.call(error.networkError, "bodyText")) {
          const netErr = error.networkError;
          messages.push(`${netErr.name}: ${netErr.bodyText}`);
        } else if (Object.prototype.hasOwnProperty.call(error.networkError, "result")) {
          const netErr = error.networkError;
          (_e = netErr.result.errors) == null ? void 0 : _e.forEach((error2) => {
            var _a2;
            if (typeof error2.message === "string") {
              var _context2;
              if ((0, _indexOf.default)(_context2 = error2.message).call(_context2, ";") >= 0) {
                messages.push((_a2 = error2.message) == null ? void 0 : _a2.split(";")[1]);
              } else {
                messages.push(error2.message);
              }
            }
          });
        }
      }
      if (!rootMessage) {
        return null;
      }
      return (0, _jsxRuntime.jsxs)("div", {
        className: wrapperClassName,
        style: wrapperStyle,
        children: [(0, _jsxRuntime.jsx)("p", {
          className: titleClassName,
          style: titleStyle,
          children: rootMessage
        }), messages.length > 0 && (0, _jsxRuntime.jsx)("ul", {
          className: listClassName,
          style: listStyle,
          children: (0, _map.default)(messages).call(messages, (message, index) => (0, _jsxRuntime.jsx)("li", {
            className: listItemClassName,
            style: listItemStyle,
            children: message
          }, index))
        })]
      });
    };
    var _default = exports.default = FormError;
  }
});

// ../node_modules/pascalcase/index.js
var require_pascalcase = __commonJS({
  "../node_modules/pascalcase/index.js"(exports, module) {
    var titlecase = (input) => input[0].toLocaleUpperCase() + input.slice(1);
    module.exports = (value) => {
      if (value === null || value === void 0)
        return "";
      if (typeof value.toString !== "function")
        return "";
      let input = value.toString().trim();
      if (input === "")
        return "";
      if (input.length === 1)
        return input.toLocaleUpperCase();
      let match = input.match(/[a-zA-Z0-9]+/g);
      if (match) {
        return match.map((m) => titlecase(m)).join("");
      }
      return input;
    };
  }
});

// ../node_modules/@redwoodjs/forms/dist/InputComponents.js
var require_InputComponents = __commonJS({
  "../node_modules/@redwoodjs/forms/dist/InputComponents.js"(exports) {
    "use strict";
    var _Object$defineProperty = require_define_property();
    var _interopRequireWildcard = require_interopRequireWildcard().default;
    var _interopRequireDefault = require_interopRequireDefault().default;
    _Object$defineProperty(exports, "__esModule", {
      value: true
    });
    exports.WeekField = exports.UrlField = exports.TimeField = exports.TextField = exports.TelField = exports.SubmitField = exports.SearchField = exports.ResetField = exports.RangeField = exports.RadioField = exports.PasswordField = exports.NumberField = exports.MonthField = exports.InputField = exports.ImageField = exports.HiddenField = exports.FileField = exports.EmailField = exports.DatetimeLocalField = exports.DateField = exports.ColorField = exports.ButtonField = void 0;
    var _forEach = _interopRequireDefault(require_for_each());
    var _react = _interopRequireWildcard(require_react());
    var _pascalcase = _interopRequireDefault(require_pascalcase());
    var _useErrorStyles = require_useErrorStyles();
    var _useRegister = require_useRegister();
    var _jsxRuntime = require_jsx_runtime();
    var INPUT_TYPES = ["button", "color", "date", "datetime-local", "email", "file", "hidden", "image", "month", "number", "password", "radio", "range", "reset", "search", "submit", "tel", "text", "time", "url", "week"];
    var InputField = exports.InputField = (0, _react.forwardRef)((_ref, ref) => {
      let {
        name,
        id,
        emptyAs,
        // for useErrorStyles
        errorClassName,
        errorStyle,
        className,
        style,
        // for useRegister
        validation,
        onBlur,
        onChange,
        type,
        ...rest
      } = _ref;
      const styles = (0, _useErrorStyles.useErrorStyles)({
        name,
        errorClassName,
        errorStyle,
        className,
        style
      });
      const useRegisterReturn = (0, _useRegister.useRegister)({
        name,
        validation,
        onBlur,
        onChange,
        type
      }, ref, emptyAs);
      return (0, _jsxRuntime.jsx)("input", {
        id: id || name,
        ...rest,
        type,
        ...styles,
        ...useRegisterReturn
      });
    });
    var InputComponents = {};
    (0, _forEach.default)(INPUT_TYPES).call(INPUT_TYPES, (type) => {
      InputComponents[`${(0, _pascalcase.default)(type)}Field`] = (0, _react.forwardRef)((props, ref) => (0, _jsxRuntime.jsx)(InputField, {
        ref,
        type,
        ...props
      }));
    });
    var {
      ButtonField,
      ColorField,
      DateField,
      DatetimeLocalField,
      EmailField,
      FileField,
      HiddenField,
      ImageField,
      MonthField,
      NumberField,
      PasswordField,
      RadioField,
      RangeField,
      ResetField,
      SearchField,
      SubmitField,
      TelField,
      TextField,
      TimeField,
      UrlField,
      WeekField
    } = InputComponents;
    exports.WeekField = WeekField;
    exports.UrlField = UrlField;
    exports.TimeField = TimeField;
    exports.TextField = TextField;
    exports.TelField = TelField;
    exports.SubmitField = SubmitField;
    exports.SearchField = SearchField;
    exports.ResetField = ResetField;
    exports.RangeField = RangeField;
    exports.RadioField = RadioField;
    exports.PasswordField = PasswordField;
    exports.NumberField = NumberField;
    exports.MonthField = MonthField;
    exports.ImageField = ImageField;
    exports.HiddenField = HiddenField;
    exports.FileField = FileField;
    exports.EmailField = EmailField;
    exports.DatetimeLocalField = DatetimeLocalField;
    exports.DateField = DateField;
    exports.ColorField = ColorField;
    exports.ButtonField = ButtonField;
  }
});

// ../node_modules/@redwoodjs/forms/dist/Label.js
var require_Label = __commonJS({
  "../node_modules/@redwoodjs/forms/dist/Label.js"(exports) {
    "use strict";
    var _Object$defineProperty = require_define_property();
    var _interopRequireDefault = require_interopRequireDefault().default;
    _Object$defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Label = void 0;
    var _react = _interopRequireDefault(require_react());
    var _useErrorStyles = require_useErrorStyles();
    var _jsxRuntime = require_jsx_runtime();
    var Label = (_ref) => {
      let {
        name,
        children,
        // for useErrorStyles
        errorClassName,
        errorStyle,
        className,
        style,
        ...rest
      } = _ref;
      const styles = (0, _useErrorStyles.useErrorStyles)({
        name,
        errorClassName,
        errorStyle,
        className,
        style
      });
      return (0, _jsxRuntime.jsx)("label", {
        htmlFor: name,
        ...rest,
        ...styles,
        children: children || name
      });
    };
    exports.Label = Label;
  }
});

// ../node_modules/@redwoodjs/forms/dist/SelectField.js
var require_SelectField = __commonJS({
  "../node_modules/@redwoodjs/forms/dist/SelectField.js"(exports) {
    "use strict";
    var _Object$defineProperty = require_define_property();
    var _interopRequireWildcard = require_interopRequireWildcard().default;
    _Object$defineProperty(exports, "__esModule", {
      value: true
    });
    exports.SelectField = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _useErrorStyles = require_useErrorStyles();
    var _useRegister = require_useRegister();
    var _jsxRuntime = require_jsx_runtime();
    var SelectField = exports.SelectField = (0, _react.forwardRef)((_ref, ref) => {
      let {
        name,
        id,
        emptyAs,
        // for useErrorStyles
        errorClassName,
        errorStyle,
        className,
        style,
        // for useRegister
        validation,
        onBlur,
        onChange,
        ...rest
      } = _ref;
      const styles = (0, _useErrorStyles.useErrorStyles)({
        name,
        errorClassName,
        errorStyle,
        className,
        style
      });
      const useRegisterReturn = (0, _useRegister.useRegister)({
        name,
        validation,
        onBlur,
        onChange
      }, ref, emptyAs);
      return (0, _jsxRuntime.jsx)("select", {
        id: id || name,
        ...rest,
        ...styles,
        ...useRegisterReturn
      });
    });
  }
});

// ../node_modules/@redwoodjs/forms/dist/Submit.js
var require_Submit = __commonJS({
  "../node_modules/@redwoodjs/forms/dist/Submit.js"(exports) {
    "use strict";
    var _Object$defineProperty = require_define_property();
    var _interopRequireWildcard = require_interopRequireWildcard().default;
    _Object$defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Submit = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _jsxRuntime = require_jsx_runtime();
    var Submit = exports.Submit = (0, _react.forwardRef)((props, ref) => (0, _jsxRuntime.jsx)("button", {
      ref,
      type: "submit",
      ...props
    }));
  }
});

// ../node_modules/@redwoodjs/forms/dist/TextAreaField.js
var require_TextAreaField = __commonJS({
  "../node_modules/@redwoodjs/forms/dist/TextAreaField.js"(exports) {
    "use strict";
    var _Object$defineProperty = require_define_property();
    var _interopRequireWildcard = require_interopRequireWildcard().default;
    _Object$defineProperty(exports, "__esModule", {
      value: true
    });
    exports.TextAreaField = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _useErrorStyles = require_useErrorStyles();
    var _useRegister = require_useRegister();
    var _jsxRuntime = require_jsx_runtime();
    var TextAreaField = exports.TextAreaField = (0, _react.forwardRef)((_ref, ref) => {
      let {
        name,
        id,
        emptyAs,
        // for useErrorStyles
        errorClassName,
        errorStyle,
        className,
        style,
        // for useRegister
        validation,
        onBlur,
        onChange,
        ...rest
      } = _ref;
      const styles = (0, _useErrorStyles.useErrorStyles)({
        name,
        errorClassName,
        errorStyle,
        className,
        style
      });
      const useRegisterReturn = (0, _useRegister.useRegister)({
        name,
        validation,
        onBlur,
        onChange
      }, ref, emptyAs);
      return (0, _jsxRuntime.jsx)("textarea", {
        id: id || name,
        ...rest,
        ...styles,
        ...useRegisterReturn
      });
    });
  }
});

// ../node_modules/@redwoodjs/forms/dist/index.js
var require_dist = __commonJS({
  "../node_modules/@redwoodjs/forms/dist/index.js"(exports) {
    var _context;
    var _Object$defineProperty = require_define_property();
    var _forEachInstanceProperty = require_for_each();
    var _Object$keys = require_keys();
    var _interopRequireDefault = require_interopRequireDefault().default;
    _Object$defineProperty(exports, "__esModule", {
      value: true
    });
    var _exportNames = {
      CheckboxField: true,
      FieldError: true,
      Form: true,
      FormProps: true,
      FormError: true,
      InputField: true,
      ButtonField: true,
      ColorField: true,
      DateField: true,
      DatetimeLocalField: true,
      EmailField: true,
      FileField: true,
      HiddenField: true,
      ImageField: true,
      MonthField: true,
      NumberField: true,
      PasswordField: true,
      RadioField: true,
      RangeField: true,
      ResetField: true,
      SearchField: true,
      SubmitField: true,
      TelField: true,
      TextField: true,
      TimeField: true,
      UrlField: true,
      WeekField: true,
      Label: true,
      SelectField: true,
      ServerErrorsContext: true,
      Submit: true,
      TextAreaField: true,
      useErrorStyles: true,
      useRegister: true
    };
    _Object$defineProperty(exports, "ButtonField", {
      enumerable: true,
      get: function() {
        return _InputComponents.ButtonField;
      }
    });
    _Object$defineProperty(exports, "CheckboxField", {
      enumerable: true,
      get: function() {
        return _CheckboxField.CheckboxField;
      }
    });
    _Object$defineProperty(exports, "ColorField", {
      enumerable: true,
      get: function() {
        return _InputComponents.ColorField;
      }
    });
    _Object$defineProperty(exports, "DateField", {
      enumerable: true,
      get: function() {
        return _InputComponents.DateField;
      }
    });
    _Object$defineProperty(exports, "DatetimeLocalField", {
      enumerable: true,
      get: function() {
        return _InputComponents.DatetimeLocalField;
      }
    });
    _Object$defineProperty(exports, "EmailField", {
      enumerable: true,
      get: function() {
        return _InputComponents.EmailField;
      }
    });
    _Object$defineProperty(exports, "FieldError", {
      enumerable: true,
      get: function() {
        return _FieldError.FieldError;
      }
    });
    _Object$defineProperty(exports, "FileField", {
      enumerable: true,
      get: function() {
        return _InputComponents.FileField;
      }
    });
    _Object$defineProperty(exports, "Form", {
      enumerable: true,
      get: function() {
        return _Form.Form;
      }
    });
    _Object$defineProperty(exports, "FormError", {
      enumerable: true,
      get: function() {
        return _FormError.default;
      }
    });
    _Object$defineProperty(exports, "FormProps", {
      enumerable: true,
      get: function() {
        return _Form.FormProps;
      }
    });
    _Object$defineProperty(exports, "HiddenField", {
      enumerable: true,
      get: function() {
        return _InputComponents.HiddenField;
      }
    });
    _Object$defineProperty(exports, "ImageField", {
      enumerable: true,
      get: function() {
        return _InputComponents.ImageField;
      }
    });
    _Object$defineProperty(exports, "InputField", {
      enumerable: true,
      get: function() {
        return _InputComponents.InputField;
      }
    });
    _Object$defineProperty(exports, "Label", {
      enumerable: true,
      get: function() {
        return _Label.Label;
      }
    });
    _Object$defineProperty(exports, "MonthField", {
      enumerable: true,
      get: function() {
        return _InputComponents.MonthField;
      }
    });
    _Object$defineProperty(exports, "NumberField", {
      enumerable: true,
      get: function() {
        return _InputComponents.NumberField;
      }
    });
    _Object$defineProperty(exports, "PasswordField", {
      enumerable: true,
      get: function() {
        return _InputComponents.PasswordField;
      }
    });
    _Object$defineProperty(exports, "RadioField", {
      enumerable: true,
      get: function() {
        return _InputComponents.RadioField;
      }
    });
    _Object$defineProperty(exports, "RangeField", {
      enumerable: true,
      get: function() {
        return _InputComponents.RangeField;
      }
    });
    _Object$defineProperty(exports, "ResetField", {
      enumerable: true,
      get: function() {
        return _InputComponents.ResetField;
      }
    });
    _Object$defineProperty(exports, "SearchField", {
      enumerable: true,
      get: function() {
        return _InputComponents.SearchField;
      }
    });
    _Object$defineProperty(exports, "SelectField", {
      enumerable: true,
      get: function() {
        return _SelectField.SelectField;
      }
    });
    _Object$defineProperty(exports, "ServerErrorsContext", {
      enumerable: true,
      get: function() {
        return _ServerErrorsContext.ServerErrorsContext;
      }
    });
    _Object$defineProperty(exports, "Submit", {
      enumerable: true,
      get: function() {
        return _Submit.Submit;
      }
    });
    _Object$defineProperty(exports, "SubmitField", {
      enumerable: true,
      get: function() {
        return _InputComponents.SubmitField;
      }
    });
    _Object$defineProperty(exports, "TelField", {
      enumerable: true,
      get: function() {
        return _InputComponents.TelField;
      }
    });
    _Object$defineProperty(exports, "TextAreaField", {
      enumerable: true,
      get: function() {
        return _TextAreaField.TextAreaField;
      }
    });
    _Object$defineProperty(exports, "TextField", {
      enumerable: true,
      get: function() {
        return _InputComponents.TextField;
      }
    });
    _Object$defineProperty(exports, "TimeField", {
      enumerable: true,
      get: function() {
        return _InputComponents.TimeField;
      }
    });
    _Object$defineProperty(exports, "UrlField", {
      enumerable: true,
      get: function() {
        return _InputComponents.UrlField;
      }
    });
    _Object$defineProperty(exports, "WeekField", {
      enumerable: true,
      get: function() {
        return _InputComponents.WeekField;
      }
    });
    _Object$defineProperty(exports, "useErrorStyles", {
      enumerable: true,
      get: function() {
        return _useErrorStyles.useErrorStyles;
      }
    });
    _Object$defineProperty(exports, "useRegister", {
      enumerable: true,
      get: function() {
        return _useRegister.useRegister;
      }
    });
    var _reactHookForm = require_index_cjs();
    _forEachInstanceProperty(_context = _Object$keys(_reactHookForm)).call(_context, function(key) {
      if (key === "default" || key === "__esModule")
        return;
      if (Object.prototype.hasOwnProperty.call(_exportNames, key))
        return;
      if (key in exports && exports[key] === _reactHookForm[key])
        return;
      _Object$defineProperty(exports, key, {
        enumerable: true,
        get: function() {
          return _reactHookForm[key];
        }
      });
    });
    var _CheckboxField = require_CheckboxField();
    var _FieldError = require_FieldError();
    var _Form = require_Form();
    var _FormError = _interopRequireDefault(require_FormError());
    var _InputComponents = require_InputComponents();
    var _Label = require_Label();
    var _SelectField = require_SelectField();
    var _ServerErrorsContext = require_ServerErrorsContext();
    var _Submit = require_Submit();
    var _TextAreaField = require_TextAreaField();
    var _useErrorStyles = require_useErrorStyles();
    var _useRegister = require_useRegister();
  }
});
export default require_dist();
/*! Bundled license information:

pascalcase/index.js:
  (*!
   * pascalcase <https://github.com/jonschlinkert/pascalcase>
   *
   * Copyright (c) 2015-present, Jon ("Schlink") Schlinkert.
   * Licensed under the MIT License.
   *)
*/
//# sourceMappingURL=@redwoodjs_forms.js.map
