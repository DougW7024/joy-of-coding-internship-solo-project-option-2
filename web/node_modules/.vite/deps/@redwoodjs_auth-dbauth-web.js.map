{
  "version": 3,
  "sources": ["../../../../node_modules/@redwoodjs/auth-dbauth-web/dist/dbAuth.js", "../../../../node_modules/@redwoodjs/auth-dbauth-web/dist/index.js"],
  "sourcesContent": ["\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js/object/define-property\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\").default;\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAuth = createAuth;\nexports.createDbAuthClient = createDbAuthClient;\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js/json/stringify\"));\nvar _auth = require(\"@redwoodjs/auth\");\nconst TOKEN_CACHE_TIME = 5000;\nfunction createAuth(dbAuthClient, customProviderHooks) {\n  return (0, _auth.createAuthentication)(dbAuthClient, customProviderHooks);\n}\nfunction createDbAuthClient({\n  webAuthn,\n  dbAuthUrl,\n  fetchConfig\n} = {}) {\n  const credentials = fetchConfig?.credentials || 'same-origin';\n  webAuthn?.setAuthApiUrl(dbAuthUrl);\n  let getTokenPromise;\n  let lastTokenCheckAt = new Date('1970-01-01T00:00:00');\n  let cachedToken;\n  const getApiDbAuthUrl = () => {\n    return dbAuthUrl || `${RWJS_API_URL}/auth`;\n  };\n  const resetAndFetch = async (...params) => {\n    resetTokenCache();\n    return fetch(...params);\n  };\n  const isTokenCacheExpired = () => {\n    const now = new Date();\n    return now.getTime() - lastTokenCheckAt.getTime() > TOKEN_CACHE_TIME;\n  };\n  const resetTokenCache = () => {\n    lastTokenCheckAt = new Date('1970-01-01T00:00:00');\n    cachedToken = null;\n  };\n  const forgotPassword = async username => {\n    const response = await resetAndFetch(getApiDbAuthUrl(), {\n      credentials,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: (0, _stringify.default)({\n        username,\n        method: 'forgotPassword'\n      })\n    });\n    return response.json();\n  };\n  const getToken = async () => {\n    // Return the existing fetch promise, so that parallel calls\n    // to getToken only cause a single fetch\n    if (getTokenPromise) {\n      return getTokenPromise;\n    }\n    if (isTokenCacheExpired()) {\n      getTokenPromise = fetch(`${getApiDbAuthUrl()}?method=getToken`, {\n        credentials\n      }).then(response => response.text()).then(tokenText => {\n        lastTokenCheckAt = new Date();\n        cachedToken = tokenText.length === 0 ? null : tokenText;\n        return cachedToken;\n      }).catch(() => {\n        return null;\n      }).finally(() => {\n        getTokenPromise = null;\n      });\n      return getTokenPromise;\n    }\n    return cachedToken;\n  };\n  const login = async ({\n    username,\n    password\n  }) => {\n    const response = await resetAndFetch(getApiDbAuthUrl(), {\n      credentials,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: (0, _stringify.default)({\n        username,\n        password,\n        method: 'login'\n      })\n    });\n    return response.json();\n  };\n  const logout = async () => {\n    await resetAndFetch(getApiDbAuthUrl(), {\n      credentials,\n      method: 'POST',\n      body: (0, _stringify.default)({\n        method: 'logout'\n      })\n    });\n    return true;\n  };\n  const resetPassword = async attributes => {\n    const response = await resetAndFetch(getApiDbAuthUrl(), {\n      credentials,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: (0, _stringify.default)({\n        ...attributes,\n        method: 'resetPassword'\n      })\n    });\n    return response.json();\n  };\n  const signup = async attributes => {\n    const response = await resetAndFetch(getApiDbAuthUrl(), {\n      credentials,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: (0, _stringify.default)({\n        ...attributes,\n        method: 'signup'\n      })\n    });\n    return response.json();\n  };\n  const validateResetToken = async resetToken => {\n    const response = await resetAndFetch(getApiDbAuthUrl(), {\n      credentials,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: (0, _stringify.default)({\n        resetToken,\n        method: 'validateResetToken'\n      })\n    });\n    return response.json();\n  };\n  return {\n    type: 'dbAuth',\n    client: webAuthn,\n    login,\n    logout,\n    signup,\n    getToken,\n    getUserMetadata: getToken,\n    forgotPassword,\n    resetPassword,\n    validateResetToken\n  };\n}", "\"use strict\";\n\nvar _context;\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js/object/define-property\");\nvar _forEachInstanceProperty = require(\"@babel/runtime-corejs3/core-js/instance/for-each\");\nvar _Object$keys = require(\"@babel/runtime-corejs3/core-js/object/keys\");\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _dbAuth = require(\"./dbAuth\");\n_forEachInstanceProperty(_context = _Object$keys(_dbAuth)).call(_context, function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _dbAuth[key]) return;\n  _Object$defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _dbAuth[key];\n    }\n  });\n});"],
  "mappings": "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",
  "names": []
}
